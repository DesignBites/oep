# Generated by Django 3.1.2 on 2020-11-16 06:25

from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('wagtailimages', '0022_uploadedimage'),
        ('pages', '0010_auto_20201115_1305'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivitiesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('header', wagtail.core.fields.RichTextField(max_length=500)),
                ('text', wagtail.core.fields.RichTextField()),
                ('activities', wagtail.core.fields.StreamField([('activity', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(required=False)), ('description', wagtail.core.blocks.RichTextBlock(required=False)), ('time', wagtail.core.blocks.DateTimeBlock()), ('location', wagtail.core.blocks.CharBlock(required=False)), ('url', wagtail.core.blocks.URLBlock(required=False))]))], blank=True)),
                ('time', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Background photo')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ToolkitPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('description', wagtail.core.fields.RichTextField()),
                ('url', models.URLField(blank=True, null=True)),
                ('docs', wagtail.core.fields.StreamField([('doc', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(required=False)), ('description', wagtail.core.blocks.RichTextBlock(required=False)), ('file', wagtail.documents.blocks.DocumentChooserBlock())]))])),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Background photo')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ToolkitsPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('header', wagtail.core.fields.RichTextField(max_length=500)),
                ('text', wagtail.core.fields.RichTextField()),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Background photo')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.DeleteModel(
            name='Event',
        ),
        migrations.DeleteModel(
            name='Toolkit',
        ),
        migrations.AlterField(
            model_name='podcastspage',
            name='podcasts',
            field=wagtail.core.fields.StreamField([('podcast', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('thumbnail', wagtail.images.blocks.ImageChooserBlock(required=False)), ('description', wagtail.core.blocks.RichTextBlock(required=False)), ('url', wagtail.core.blocks.URLBlock(required=False))]))], blank=True),
        ),
    ]
